package torque.generated.map;

import java.util.Date;
import java.math.BigDecimal;

import org.apache.torque.Torque;
import org.apache.torque.TorqueException;
import org.apache.torque.map.MapBuilder;
import org.apache.torque.map.DatabaseMap;
import org.apache.torque.map.TableMap;
import org.apache.torque.map.ColumnMap;
import org.apache.torque.map.InheritanceMap;

/**
 * objets_parties
 *
  *  This class was autogenerated by Torque on:
  *
  * [Mon Feb 27 16:58:52 CET 2012]
  *
  */
public class ObjetsPartiesMapBuilder implements MapBuilder
{
    /**
     * The name of this class
     */
    public static final String CLASS_NAME =
        "torque.generated.map.ObjetsPartiesMapBuilder";

    /**
     * The database map.
     */
    private DatabaseMap dbMap = null;

    /**
     * Tells us if this DatabaseMapBuilder is built so that we
     * don't have to re-build it every time.
     *
     * @return true if this DatabaseMapBuilder is built
     */
    public boolean isBuilt()
    {
        return (dbMap != null);
    }

    /**
     * Gets the databasemap this map builder built.
     *
     * @return the databasemap
     */
    public DatabaseMap getDatabaseMap()
    {
        return this.dbMap;
    }

    /**
     * The doBuild() method builds the DatabaseMap
     *
     * @throws TorqueException
     */
    public synchronized void doBuild() throws TorqueException
    {
        if ( isBuilt() ) {
            return;
        }
        dbMap = Torque.getDatabaseMap("base5a00");

        dbMap.addTable("objets_parties");
        TableMap tMap = dbMap.getTable("objets_parties");
        tMap.setJavaName("ObjetsParties");
        tMap.setOMClass( torque.generated.ObjetsParties.class );
        tMap.setPeerClass( torque.generated.ObjetsPartiesPeer.class );
        tMap.setDescription("objets_parties");
        tMap.setPrimaryKeyMethod("none");

        ColumnMap cMap = null;


  // ------------- Column: id_partie --------------------
        cMap = new ColumnMap( "id_partie", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(true);
        cMap.setNotNull(true);
        cMap.setJavaName( "IdPartie" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("Une partie");
        cMap.setInheritance("false");
        cMap.setForeignKey("parties", "id");
        cMap.setPosition(1);
        tMap.addColumn(cMap);
  // ------------- Column: nom_objet --------------------
        cMap = new ColumnMap( "nom_objet", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "NomObjet" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("Nom de lobjet");
        cMap.setInheritance("false");
        cMap.setSize( 40 );
        cMap.setForeignKey("objets", "nom");
        cMap.setPosition(2);
        tMap.addColumn(cMap);
  // ------------- Column: coord_x --------------------
        cMap = new ColumnMap( "coord_x", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "CoordX" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("coordonnées en X");
        cMap.setInheritance("false");
        cMap.setPosition(3);
        tMap.addColumn(cMap);
  // ------------- Column: coord_y --------------------
        cMap = new ColumnMap( "coord_y", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "CoordY" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("coordonnées en Y");
        cMap.setInheritance("false");
        cMap.setPosition(4);
        tMap.addColumn(cMap);
        tMap.setUseInheritance(false);
    }
}
